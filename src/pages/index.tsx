import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "src/styles/Home.module.css";
import { useEffect, useState } from "react";
import { GetServerSideProps } from "next";
import request, { GraphQLClient } from "graphql-request";
import { SelectProductsByEveryoneDocument } from "src/api/gql/graphql";
import { useQuery } from "@tanstack/react-query";

/* 
  React에서 데이터연동에 필요한 것
  1. graphql
  2. graphql-request
  3. graphql-codegen
  4. @tanstack/react-query
 */

const endpoint = "https://api.itez.io/cakey/graphql";

const graphqlClient = new GraphQLClient(endpoint);
/* 
  고양이 목록 달라! -> method: GET, path: https://test/api/v1/cats
  id가 1인 고양이 달라! -> method: GET, path: https://test/api/v2/cat?id=1
*/

// const getA = async () => {
//   await new Promise((resolve) => {
//     let nums: number[] = [];

//     setTimeout(() => {
//       nums.push(1);
//     }, 10000);
//     resolve(nums);
//   });
// };

// getA()

const inter = Inter({ subsets: ["latin"] });

interface Props {
  cats: any[];
}

export default function Home(props: Props) {
  const { data, isLoading } = useQuery(["products"], () =>
    graphqlClient.request(SelectProductsByEveryoneDocument)
  );

  console.log(data);

  // const {} = useQuery([],() => {},{}) // case1
  // const {} = useQuery({
  //   queryKey: [],
  //   queryFn: () => {},
  //   // option...
  // }); // case2

  // useEffect(() => {
  //   graphqlClient
  //     .request(SelectProductsByEveryoneDocument)
  //     .then((res) => {
  //       console.log(res.selectProductsByEveryone);
  //     })
  //     .then((res) => console.log("Graphql", res));
  // }, []);
  // const [isLoading, setIsLoading] = useState(true);
  // const [createdAts, setCreatedAts] = useState<string[]>([]);
  // useEffect(() => {
  //   fetch("https://cataas.com/api/cats")
  //     .then((response) => response.json())
  //     .then((json) => {
  //       setCreatedAts(json.map((v: any) => v.createdAt));
  //       setIsLoading(false);
  //     })
  //     // .then(async (response) => {
  //     //   const result = await response.json();
  //     //   console.log(result);
  //     // })
  //     .catch((error) => {
  //       console.log(error);
  //     })
  //     .finally(() => {
  //       console.log("finally");
  //     });
  // }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          {/* {isLoading ? (
            <span>Loading...</span>
          ) : (
            <>
              {createdAts.map((v) => (
                <span key={v}>{v}</span>
              ))}
            </>
          )} */}
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>src/pages/index.tsx</code>
          </p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{" "}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/next.svg"
            alt="Next.js Logo"
            width={180}
            height={37}
            priority
          />
          <div className={styles.thirteen}>
            <Image
              src="/thirteen.svg"
              alt="13"
              width={40}
              height={31}
              priority
            />
          </div>
        </div>

        <div className={styles.grid}>
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const cats = await fetch("https://cataas.com/api/cats")
    .then((response) => response.json())
    // .then(async (response) => {
    //   const result = await response.json();
    //   console.log(result);
    // })
    .catch((error) => {
      console.log(error);
    })
    .finally(() => {
      console.log("finally");
    });

  return {
    props: {
      cats,
    },
  };
};
